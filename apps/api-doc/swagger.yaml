openapi: 3.0.0
info:
  title: Holoapi
  version: v1
tags:
  - name: live
    description: Information on what's live
  - name: videos
    description: Everything about Hololive's videos
  - name: channels
    description: Everything about Hololive's channels
  - name: comments
    description: Access of HoloAPI's crawled timestamp comments

servers:
  - url: https://holoapi.iamvis.co/v1
    description: Development server
components:
  schemas:
    LiveVideo:
      type: object
      properties:
        id:
          type: integer
        yt_video_key:
          type: string
        bb_video_id:
          type: string
        title:
          type: string
        thumbnail:
          type: string
        live_schedule:
          type: string
        live_start:
          type: string
        live_end:
          type: string
        live_viewers:
          type: string
        channel:
          $ref: "#/components/schemas/Channel"

    CommentlessVideo:
      allOf:
        - $ref: "#/components/schemas/LiveVideo"
        - type: object
          properties:
            is_uploaded:
              type: boolean
            duration_secs:
              type: integer
            is_captioned:
              type: boolean

    Video:
      allOf:
        - $ref: "#/components/schemas/CommentlessVideo"
        - type: object
          properties:
            comments:
              type: array
              items:
                $ref: "#/components/schemas/Comment"


    Channel:
      type: object
      properties:
        id:
          type: integer
        yt_channel_id:
          type: string
        bb_space_id:
          type: string
        name:
          type: string
        description:
          type: string
        photo:
          type: string
          example: "https://yt3.ggpht.com/a/AATXAJw7R8J8buhX7Cw1m63vK2jlKFv-9YhFf-TQaA=s800-c-k-c0xffffffff-no-rj-mo"
        published_at:
          type: string
        twitter_link:
          type: string
          example: yuzukichococh

    Comment:
      type: object
      properties:
        comment_key:
          type: string
          description: >-
            "The youtube comment ID of the comment,
            use this comment_key along with the video to generate a direct link to the comment."
        message:
          type: string
          description: >-
            Plain text of a comment.

paths:
  /channels/:
    get:
      tags:
        - channels
      description: Lists/Query all channels with pagination.
      parameters:
        - name: limit
          description: The number of channels to return.
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: offset
          description: The number of channels to skip.
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          schema:
            type: string
          description: Column name to sort by, defaults to id
        - name: order
          in: query
          schema:
            type: string
          description: Can be desc or asc, defaults to asc
        - name: name
          in: query
          schema:
            type: string
          description: Partial name of Channel to match on.

      responses:
        '200':
          description: Returns list of channels
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    description: List of channels
                    items:
                      $ref: "#/components/schemas/Channel"
                  total:
                    type: integer
                    description: Count of total number of channels in this list
                  count:
                    type: integer
                    description: Number of channels fetched

  /channels/{id}:
    get:
      tags:
        - channels
      description: Fetches a single channel by its Holotools record ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: Holotools record ID of the channel
      responses:
        "200":
          description: Returns the requested channel if found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Channel"
  /channels/youtube/{yt_channel_id}:
    get:
      tags:
        - channels
      description: Fetches a single channel by its youtube hash.
      parameters:
        - name: yt_channel_id
          required: true
          in: path
          schema:
            type: string
          description: The youtube hash of the channel
      responses:
        "200":
          description: Returns the requested channel if found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Channel"
  /channels/bilibili/{bb_space_id}:
    get:
      tags:
        - channels
      description: Fetches a single channel by its bilibili space ID.
      parameters:
        - name: bb_space_id
          required: true
          in: path
          schema:
            type: string
          description: The bilibili space ID
      responses:
        "200":
          description: Returns the requested channel if found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Channel"

  /videos/:
    get:
      tags:
        - videos
      summary: Lists/Query for videos
      description: |
        Searches a video. Accepts query parameters.
        Does not output comments in video body.

      parameters:
        - name: limit
          description: The number of videos to return.
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: offset
          description: The number of videos to skip.
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          schema:
            type: string
          description: Column name to sort by, defaults to published_at
        - name: order
          in: query
          schema:
            type: string
          description: Can be desc or asc
        - name: title
          in: query
          schema:
            type: string
          description: Partial title to match on
        - name: start_date
          in: query
          schema:
            type: string
          description: Date string parsable by momentJS with 1 day granularity.
        - name: end_date
          in: query
          schema:
            type: string
          description: Date string parsable by momentJS with 1 day granularity.
        - name: status
          in: query
          schema:
            type: string
          description: Status of video to fetch.
        - name: is_uploaded
          in: query
          schema:
            type: integer
          description: 1 to only return uploaded videos
        - name: is_captioned
          in: query
          schema:
            type: integer
          description: 1 to only return videos with CC

      responses:
        "200":
          description: Returns search result
          content:
            application/json:
              schema:
                type: object
                properties:
                  videos:
                    type: array
                    description: List of videos, there are no comments here.
                    items:
                      $ref: "#/components/schemas/CommentlessVideo"
                  total:
                    type: integer
                    description: Count of total number of videos
                  count:
                    type: integer
                    description: Number of videos fetched
  /videos/{id}:
    get:
      tags:
        - videos
      description: Fetches a single video by its Holotools record ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: Holotools record ID of the video
        - name: with_comments
          in: query
          schema:
            type: integer
          description: Will only return comments array if 1
      responses:
        "200":
          description: Returns the requested video if found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Video"
  /videos/youtube/{yt_video_key}:
    get:
      tags:
        - videos
      description: Fetches a single video by its Holotools record ID.
      parameters:
        - name: yt_video_key
          required: true
          in: path
          schema:
            type: string
          description: The youtube hash of the video
        - name: with_comments
          in: query
          schema:
            type: integer
          description: Will only return comments array if 1
      responses:
        "200":
          description: Returns the requested video if found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Video"
  /videos/bilibili/{bb_video_id}:
    get:
      tags:
        - videos
      description: Fetches a single video by its Holotools record ID.
      parameters:
        - name: bb_video_id
          required: true
          in: path
          schema:
            type: string
          description: The bilibili video ID of the video
      responses:
        "200":
          description: Returns the requested video if found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Video"

  /live:
    get:
      tags:
        - live
      description: Fetches videos that are currently live.
      responses:
        200:
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  live:
                    type: array
                    items:
                      $ref: "#/components/schemas/LiveVideo"
                  upcoming:
                    type: array
                    items:
                      $ref: "#/components/schemas/LiveVideo"
                  ended:
                    type: array
                    items:
                      $ref: "#/components/schemas/LiveVideo"
                  cached:
                    type: boolean
                    description: Whether the response was cached or not

  /comments/search:
    get:
      tags:
        - comments
      description: Query search comments by keyword
      parameters:
        - name: q
          description: >-
            Query to search. This Query will be sanitized and returned back to you, since all the comment strings in the db have been sanitized.
            There are no full width alphanumerics or half width kana characters.
          in: query
          schema:
            type: string
            example: Kimi no Shiranai
          required: true
        - name: limit
          description: The number of videos to return.
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: offset
          description: The number of videos to skip.
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: channel_id
          description: A channel_id, this is a numerical id obtained from the /channels endpoint that uniquely identifies the channel on our platform. Does not support youtube/other channel hash.
          in: query
          required: false
          schema:
            type: integer
            default: null
      responses:
        "200":
          description: Returns search result in an list of videos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: list of videos along with their channel and all the timestamp comments
                    items:
                      $ref: "#/components/schemas/Video"
                  count:
                    type: integer
                    description: count of total number of videos
                  cached:
                    type: boolean
                    description: whether it's returning you a cached result.
                  query:
                    type: string
                    description: >-
                      A post-sanitized query text. This query is probably more likely than the input parameter q? to have
                      matches in the comments.
